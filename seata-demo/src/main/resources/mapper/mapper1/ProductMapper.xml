<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seataDemo.mapper.dao1.ProductMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.seataDemo.entity.pojo.Product">
		<!--主键-->
		<id column="id" property="id"  />
		<!--名称-->
		<result column="name" property="name"  />
		<!---->
		<result column="create_time" property="createTime"  />
		<!---->
		<result column="update_time" property="updateTime"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 `id`,`name`,`create_time`,`update_time`
	</sql>

	<sql id="base_condition_filed">
			<if test="id != null">
				 and  `id` = #{id}
			</if>
			<if test="name != null and name !=''">
				 and  `name` = #{name}
			</if>
			<if test="createTime != null">
				 and  `create_time` = #{createTime}
			</if>
			<if test="updateTime != null">
				 and  `update_time` = #{updateTime}
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where> <include refid="base_condition_filed" />	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="nameFuzzy != null  and nameFuzzy != ''">
				 and  `name` like concat('%', #{nameFuzzy}, '%')
			</if>
			<if test="createTimeStart != null and createTimeStart !='' ">
				 <![CDATA[ and  `create_time`>=str_to_date('${createTimeStart}', '%Y-%m-%d') ]]>
			</if>
			<if test="createTimeEnd!= null and createTimeEnd!=''">
				 <![CDATA[ and  `create_time`< date_sub(str_to_date('${createTimeEnd}','%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="updateTimeStart != null and updateTimeStart !='' ">
				 <![CDATA[ and  `update_time`>=str_to_date('${updateTimeStart}', '%Y-%m-%d') ]]>
			</if>
			<if test="updateTimeEnd!= null and updateTimeEnd!=''">
				 <![CDATA[ and  `update_time`< date_sub(str_to_date('${updateTimeEnd}','%Y-%m-%d'),interval -1 day) ]]>
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM `product` <include refid="query_condition" />
		 <if test="orderBy!=null">
			 order by ${orderBy}
		 </if>
		 <if test="page!=null">
			 limit #{page.start},#{page.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM `product` <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.seataDemo.entity.pojo.Product">
		<selectKey keyProperty="id" resultType="Long" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO `product`
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="name != null">
				 `name`,
			</if>
			<if test="createTime != null">
				 `create_time`,
			</if>
			<if test="updateTime != null">
				 `update_time`,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="name!=null">
				 #{name},
			</if>
			<if test="createTime!=null">
				 #{createTime},
			</if>
			<if test="updateTime!=null">
				 #{updateTime},
			</if>
		 </trim>
	</insert>

	<!-- 插入 （根据表名称插入）-->
	<insert id="insertWidthTableName" parameterType="com.seataDemo.entity.pojo.Product">
		<selectKey keyProperty="bean.id" resultType="Long" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO `${tableName}`(`name`,`create_time`,`update_time`)values(
			 #{bean.name},#{bean.createTime},#{bean.updateTime})
		ON DUPLICATE KEY UPDATE 
		`name` = values(`name`),`create_time` = values(`create_time`),`update_time` = values(`update_time`)
	</insert>

	<!-- 添加 （批量插入或修改）-->
		<insert id="insertBatch" parameterType="com.seataDemo.entity.pojo.Product">
		 INSERT INTO `product`
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			`id`,
		 <if test="list[0].name!= null">
		 `name`,
		 </if>
		 <if test="list[0].create_time!= null">
		 `create_time`,
		 </if>
		 <if test="list[0].update_time!= null">
		 `update_time`,
		 </if>
		</trim>
		values
			 <foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
			#{item.id},
		 <if test="list[0].name!= null">
		 #{item.name},
		 </if>
		 <if test="list[0].create_time!= null">
		 #{item.createTime},
		 </if>
		 <if test="list[0].update_time!= null">
		 #{item.updateTime},
		 </if>

		</trim>
		</foreach>
		ON DUPLICATE KEY UPDATE 
		
		<trim suffixOverrides="," >
		 <if test="list[0].name!= null">
		 `name`= values(`name`),
		 </if>
		 <if test="list[0].create_time!= null">
		 `create_time`= values(`create_time`),
		 </if>
		 <if test="list[0].update_time!= null">
		 `update_time`= values(`update_time`),
		 </if>

		</trim>
		</insert>

	<!-- 根据PrimaryKey修 改-->
	<update id="updateByPrimaryKey" parameterType="com.seataDemo.entity.pojo.Product">
		 UPDATE `product`
 		 <set> 
			<if test="bean.name != null">
				 `name` = #{bean.name},
			</if>
			<if test="bean.createTime != null">
				 `create_time` = #{bean.createTime},
			</if>
			<if test="bean.updateTime != null">
				 `update_time` = #{bean.updateTime},
			</if>
 		 </set>
 		 where `id`=#{id}
	</update>

	<!-- 根据PrimaryKey删除-->
	<delete id="deleteByPrimaryKey">
		delete from `product` where `id`=#{id}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByPrimaryKey" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from `product` where `id`=#{id}
	</select>

</mapper>